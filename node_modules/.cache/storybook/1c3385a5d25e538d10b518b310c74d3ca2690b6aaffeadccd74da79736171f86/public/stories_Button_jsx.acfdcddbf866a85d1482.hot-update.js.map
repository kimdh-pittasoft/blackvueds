{"version":3,"file":"stories_Button_jsx.acfdcddbf866a85d1482.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;;AAEA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAKA;AAAA;AAEA;AAAA;AAEA;AAAA;AAIA;AAEA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AAEA;;AAEA;AAEA;;AAEA;AAEA;;AAEA;AAEA;;AAEA;AAEA;;AAEA;AAEA;;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sources":["webpack://storybook/./stories/Button.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Button.css\";\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = ({\n  variant = \"filled\",\n  color = \"primary\",\n  size = \"medium\",\n  label,\n  leftIcon,\n  rightIcon,\n  disabled = false,\n  loading = false,\n  onClick,\n  className,\n  ...props\n}) => {\n  const baseClassName = \"btn\";\n  const classes = [\n    baseClassName,\n    `btn-${variant}`,\n    `btn-${color}`,\n    `btn-${size}`,\n    disabled ? \"btn-disabled\" : \"\",\n    loading ? \"btn-loading\" : \"\",\n    className || \"\"\n  ]\n    .filter(Boolean)\n    .join(\" \");\n\n  return (\n    <button\n      type=\"button\"\n      className={classes}\n      disabled={disabled || loading}\n      onClick={onClick}\n      {...props}\n    >\n      {loading && (\n        <span className=\"btn-spinner\" aria-hidden=\"true\">\n          &#8203;\n        </span>\n      )}\n      {!loading && leftIcon && (\n        <span className=\"btn-icon btn-icon-left material-icons\">{leftIcon}</span>\n      )}\n      <span className=\"btn-label\">{label}</span>\n      {!loading && rightIcon && (\n        <span className=\"btn-icon btn-icon-right material-icons\">{rightIcon}</span>\n      )}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  /**\n   * Button variant\n   */\n  variant: PropTypes.oneOf([\"filled\", \"outlined\", \"text\"]),\n  /**\n   * Button color scheme\n   */\n  color: PropTypes.oneOf([\"primary\", \"secondary\", \"danger\"]),\n  /**\n   * Button size\n   */\n  size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]),\n  /**\n   * Button contents\n   */\n  label: PropTypes.string.isRequired,\n  /**\n   * Left icon (Material Icons)\n   */\n  leftIcon: PropTypes.string,\n  /**\n   * Right icon (Material Icons)\n   */\n  rightIcon: PropTypes.string,\n  /**\n   * Disabled state\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Loading state\n   */\n  loading: PropTypes.bool,\n  /**\n   * Optional click handler\n   */\n  onClick: PropTypes.func,\n  /**\n   * Additional CSS class names\n   */\n  className: PropTypes.string,\n};\n\nButton.defaultProps = {\n  variant: \"filled\",\n  color: \"primary\",\n  size: \"medium\",\n  disabled: false,\n  loading: false,\n  onClick: undefined,\n  className: \"\",\n};\n\nexport default Button;\n\n"],"names":[],"sourceRoot":""}