"use strict";
self["webpackHotUpdatestorybook"]("stories_Button_jsx",{

/***/ "./stories/Button.jsx":
/*!****************************!*\
  !*** ./stories/Button.jsx ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Button: () => (/* binding */ Button),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _Button_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button.css */ "./stories/Button.css");



/**
 * Primary UI component for user interaction
 */ const Button = ({ variant = "filled", color = "primary", size = "medium", label, leftIcon, rightIcon, disabled = false, loading = false, onClick, className, ...props })=>{
    const baseClassName = "btn";
    const classes = [
        baseClassName,
        `btn-${variant}`,
        `btn-${color}`,
        `btn-${size}`,
        disabled ? "btn-disabled" : "",
        loading ? "btn-loading" : "",
        className || ""
    ].filter(Boolean).join(" ");
    return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("button", {
        type: "button",
        className: classes,
        disabled: disabled || loading,
        onClick: onClick,
        ...props
    }, loading && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
        className: "btn-spinner",
        "aria-hidden": "true"
    }, "â€‹"), !loading && leftIcon && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
        className: "btn-icon btn-icon-left material-icons"
    }, leftIcon), /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
        className: "btn-label"
    }, label), !loading && rightIcon && /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0___default().createElement("span", {
        className: "btn-icon btn-icon-right material-icons"
    }, rightIcon));
};
Button.propTypes = {
    /**
   * Button variant
   */ variant: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf([
        "filled",
        "outlined",
        "text"
    ]),
    /**
   * Button color scheme
   */ color: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf([
        "primary",
        "secondary",
        "danger"
    ]),
    /**
   * Button size
   */ size: prop_types__WEBPACK_IMPORTED_MODULE_2___default().oneOf([
        "small",
        "medium",
        "large"
    ]),
    /**
   * Button contents
   */ label: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string).isRequired,
    /**
   * Left icon (Material Icons)
   */ leftIcon: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),
    /**
   * Right icon (Material Icons)
   */ rightIcon: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string),
    /**
   * Disabled state
   */ disabled: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),
    /**
   * Loading state
   */ loading: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().bool),
    /**
   * Optional click handler
   */ onClick: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().func),
    /**
   * Additional CSS class names
   */ className: (prop_types__WEBPACK_IMPORTED_MODULE_2___default().string)
};
Button.defaultProps = {
    variant: "filled",
    color: "primary",
    size: "medium",
    disabled: false,
    loading: false,
    onClick: undefined,
    className: ""
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Button);
Button.__docgenInfo = {
    "description": "Primary UI component for user interaction",
    "methods": [],
    "displayName": "Button",
    "props": {
        "variant": {
            "defaultValue": {
                "value": "\"filled\"",
                "computed": false
            },
            "description": "Button variant",
            "type": {
                "name": "enum",
                "value": [
                    {
                        "value": "\"filled\"",
                        "computed": false
                    },
                    {
                        "value": "\"outlined\"",
                        "computed": false
                    },
                    {
                        "value": "\"text\"",
                        "computed": false
                    }
                ]
            },
            "required": false
        },
        "color": {
            "defaultValue": {
                "value": "\"primary\"",
                "computed": false
            },
            "description": "Button color scheme",
            "type": {
                "name": "enum",
                "value": [
                    {
                        "value": "\"primary\"",
                        "computed": false
                    },
                    {
                        "value": "\"secondary\"",
                        "computed": false
                    },
                    {
                        "value": "\"danger\"",
                        "computed": false
                    }
                ]
            },
            "required": false
        },
        "size": {
            "defaultValue": {
                "value": "\"medium\"",
                "computed": false
            },
            "description": "Button size",
            "type": {
                "name": "enum",
                "value": [
                    {
                        "value": "\"small\"",
                        "computed": false
                    },
                    {
                        "value": "\"medium\"",
                        "computed": false
                    },
                    {
                        "value": "\"large\"",
                        "computed": false
                    }
                ]
            },
            "required": false
        },
        "disabled": {
            "defaultValue": {
                "value": "false",
                "computed": false
            },
            "description": "Disabled state",
            "type": {
                "name": "bool"
            },
            "required": false
        },
        "loading": {
            "defaultValue": {
                "value": "false",
                "computed": false
            },
            "description": "Loading state",
            "type": {
                "name": "bool"
            },
            "required": false
        },
        "onClick": {
            "defaultValue": {
                "value": "undefined",
                "computed": true
            },
            "description": "Optional click handler",
            "type": {
                "name": "func"
            },
            "required": false
        },
        "className": {
            "defaultValue": {
                "value": "\"\"",
                "computed": false
            },
            "description": "Additional CSS class names",
            "type": {
                "name": "string"
            },
            "required": false
        },
        "label": {
            "description": "Button contents",
            "type": {
                "name": "string"
            },
            "required": true
        },
        "leftIcon": {
            "description": "Left icon (Material Icons)",
            "type": {
                "name": "string"
            },
            "required": false
        },
        "rightIcon": {
            "description": "Right icon (Material Icons)",
            "type": {
                "name": "string"
            },
            "required": false
        }
    }
};


/***/ })

});
//# sourceMappingURL=stories_Button_jsx.acfdcddbf866a85d1482.hot-update.js.map